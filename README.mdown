# MarkLogic Analytics Dashboard

The Analytics Dashboard is an online reporting service that allows you to easily create and share powerful reports in minutes from MarkLogic database. Using the dashboard, you can upload XML and CSV data files into MarkLogic database. You can then create reports and perform data analysis.

This application was generated by the MarkLogic-Node [Slush](https://github.com/klei/slush) generator, with the following components:

- [AngularJS](https://angularjs.org/)
- [Gulp](http://gulpjs.com/)
- [node.js](http://nodejs.org/): very thin layer, hosting the Angular code and proxying MarkLogic REST API requests
- [Roxy Deployer](https://github.com/marklogic/roxy): bootstrap MarkLogic databases, application servers, etc; scaffolding for MarkLogic REST API service extensions

# Preparing for installation

The following softwares are required before you can install and run the application on your computer.

## git
https://git-scm.com/book/en/v2/Getting-Started-Installing-Git

## ruby
https://www.ruby-lang.org/en/

The recommended version is v2.2.2 (64 bit) or higher.

## python
https://www.python.org/

The recommended version is 3.4.3 or higher.

## node
https://nodejs.org/en/

The recommended version is v0.12.7 (64 bit) or higher.

## MarkLogic
http://developer.marklogic.com/free-developer

The recommended version is 8.

## gulp
Execute the following command to install gulp:

```npm install --global gulp```

## bower
Execute the following command to install bower:

```npm install --global bower```

## MarkLogic package manager
Execute the following command to install the package manager:

```npm install --global mlpm```

## mlcp
Follow the instructions in https://docs.marklogic.com/guide/ingestion/content-pump. After installation, put the mlcp command in the PATH env

# Cloning the application on your computer

- Open a command window.
- Change the current working directory to the location where you want the cloned application to be made.
- Run ```git clone https://github.com/jianmin/analytics-dashboard.git```
- The application will be cloned in the analytics-dashboard directory.

# Configuring the application

First check the default configuration in deploy/build.properties file; if any settings (such as ports, credentials, etc.) aren't appropriate for your environment, replace them with your own.

Once the settings are correct, open a command window and go to the analytics-dashboard directory, then perform the following actions:
- `ml local bootstrap`
- `ml local deploy modules`
- `mlpm deploy -H localhost -P 8040 -u admin -p admin` # replace credentials with your own
- edit gulpfile.js. In the options section near the top, set your desired ports

# Running the application

- `gulp server` # this will run the node server

Open a web browser and go to http://localhost:9071/ (or whatever node port you defined in gulpfile.js), login with your admin credentials.
